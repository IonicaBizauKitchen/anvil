#!/bin/sh

export

id=$1

# finish the "Launching build slave..." line
echo "done"

# create a temporary compile directory
compile_dir=$(mktemp -t compile_XXXXX)
rm -rf $compile_dir
mkdir -p $compile_dir

# create a cache dir
cache_dir=$(mktemp -t cache_XXXXX)
rm -rf $cache_dir
mkdir -p $cache_dir

# fetching app
echo -n "Recreating app from manifest... "
cd $compile_dir
curl -s $ANVIL_HOST/manifest/$id.tgz -o app.tgz
tar xzf app.tgz
rm app.tgz
echo "done"

# fetch buildpack
echo -n "Fetching buildpack kit... "
rm -rf .buildpack
mkdir -p .buildpack
cd .buildpack
curl -s $BUILDPACK_URL -o- | tar xzf -
cd ..
echo "done"

# get buildpack name
echo -n "Detecting buildpack... "
buildpack_name=$(.buildpack/bin/detect "$compile_dir")

# abort if detect failes
if [ $? -eq 0 ]; then
  echo "done, ${buildpack_name}"
else
  echo "failed"
  exit 1
fi

# compile
echo "Compiling application"
cd $compile_dir
.buildpack/bin/compile $compile_dir $cache_dir | sed -e "s/^....../ /g"

# make slug
echo -n "Creating slug... "
slug=$(mktemp -t slug_XXXXX).img
mksquashfs $compile_dir $slug -all-root >/dev/null
echo "done"

ls -la $slug

echo "PUT: $SLUG_PUT_URL"
