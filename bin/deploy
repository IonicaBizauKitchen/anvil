#!/bin/bash
#
#/ Usage: deploy [-g] [-t] [-b <build>] <release>
#/
#/   compile anvil using anvil-<build> and release
#/   it to anvil-<release>
#/
#/   <build> will default to "production"
#/
#/   -g: use git remote as build source
#/
#/   -t: test anvil by building itself recursively over
#/       three generations


# fail fast
set -o errexit
set -o pipefail

echo() {
  /bin/echo $*
}

error() {
  /bin/echo $*; exit 1
}

check_env() {
  [[ ${!1} ]] || error "Environment variable ${1} is not set."
}

usage() {
  cat $0 | grep '^#/' | cut -c4-
}

build() {
  if [ "$git" == "1" ]; then
    $root/bin/build -g $1
  else
    $root/bin/build $1
  fi
}

check_env AWS_ACCESS
check_env AWS_SECRET
check_env S3_BUCKET

root=$(dirname $(dirname $0))
git=""
testrun=""
build_environment="production"

while getopts "hgtb:" opt; do
  case $opt in
    h) usage; exit 0 ;;
    g) git="1" ;;
    t) testrun="1" ;;
    b) build_environment="$OPTARG" ;;
    ?) usage; exit 0 ;;
  esac
done

shift $((OPTIND-1))

release_environment="$1"

if [ "$build_environment" == "" ]; then
  error "Must specify a build environment."
fi

if [ "$release_environment" == "" ]; then
  error "Must specify a release environment."
fi

slug_url=$(build $build_environment)
bin/release $release_environment $slug_url

if [ "$testrun" == "1" ]; then
  slug_url=$(build $release_environment)
  bin/release $release_environment $slug_url

  slug_url=$(build $release_environment)
  bin/release $release_environment $slug_url
fi

bin/upload $slug_url
